-- MySQL Script generated by MySQL Workbench
-- Sun May 14 10:45:15 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema loan_plans
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema loan_plans
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `loan_plans` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `loan_plans` ;

-- -----------------------------------------------------
-- Table `loan_plans`.`baseinterest`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `loan_plans`.`baseinterest` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `LoanType` VARCHAR(25) NULL DEFAULT NULL,
  `BaseInterestRate` FLOAT NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `loan_plans`.`loanplans`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `loan_plans`.`loanplans` (
  `PlanId` INT NOT NULL AUTO_INCREMENT,
  `PlanName` VARCHAR(30) NOT NULL,
  `LoanTypeId` INT NULL DEFAULT NULL,
  `PrincipalAmount` INT NULL DEFAULT NULL,
  `Tenure` INT NULL DEFAULT NULL,
  `InterestRate` FLOAT NULL DEFAULT NULL,
  `InterestAmount` INT NULL DEFAULT NULL,
  `TotalPayable` INT NULL DEFAULT NULL,
  `EMI` FLOAT NULL DEFAULT NULL,
  `PlanValidity` DATE NULL DEFAULT NULL,
  `PlanAddedOn` DATE NULL DEFAULT NULL,
  `baseinterest_id` INT NOT NULL,
  PRIMARY KEY (`PlanId`),
  INDEX `fk_loanplans_baseinterest_idx` (`baseinterest_id` ASC) VISIBLE,
  CONSTRAINT `fk_loanplans_baseinterest`
    FOREIGN KEY (`baseinterest_id`)
    REFERENCES `loan_plans`.`baseinterest` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `loan_plans`.`loanplanshistory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `loan_plans`.`loanplanshistory` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `updatedDate` DATE NULL DEFAULT NULL,
  `updateReason` VARCHAR(500) NULL DEFAULT NULL,
  `LoanPlanId` INT NULL DEFAULT NULL,
  `loanplans_PlanId` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_loanplanshistory_loanplans1_idx` (`loanplans_PlanId` ASC) VISIBLE,
  CONSTRAINT `fk_loanplanshistory_loanplans1`
    FOREIGN KEY (`loanplans_PlanId`)
    REFERENCES `loan_plans`.`loanplans` (`PlanId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


//convert this to sql 

create database loan_plans;
use loan_plans;

create table baseinterest(id int auto_increment primary key,LoanType varchar(25),BaseInterestRate float);


create table loanplans(PlanId int auto_increment primary key,PlanName varchar(30),
LoanTypeId int,PrincipalAmount int,Tenure int,InterestRate float,InterestAmount int,TotalPayable int,
EMI float,PlanValidity date,PlanAddedOn date,baseinterest_id int,foreign key(baseinterest_id) references baseinterest(id));

create table loanplanshistory(id int auto_increment primary key,updatedDate date,updateReason varchar(500),
LoanPlanId int,loanplans_PlanId int,foreign key(loanplans_PlanId) references loanplans(PlanId));

/*Enforce the following constraints on the database apart from primary key, foreign key and unique keys 

TotalPayable amount should be calculated based on Principle amount and interest amount 

Plan validity must be a future date 

Plan added on should be taken by default as date of insert operation 

Tenures should accept a maximum of 3 digits only 
*/

create table loanplans(PlanId int auto_increment primary key,PlanName varchar(30),
LoanTypeId int,PrincipalAmount int,Tenure int,InterestRate float,InterestAmount int,TotalPayable int,
EMI float,PlanValidity date,PlanAddedOn date ,baseinterest_id int,foreign key(baseinterest_id) references baseinterest(id),
check(TotalPayable=PrincipalAmount+InterestAmount),check(PlanValidity>curdate()),check(Tenure<1000));

---mysql error curdate() disallowed function
---solve the error in loanplans table

create table loanplans(PlanId int auto_increment primary key,PlanName varchar(30),
LoanTypeId int,PrincipalAmount int,Tenure int,InterestRate float,InterestAmount int,TotalPayable int,
EMI float,PlanValidity date,PlanAddedOn date,baseinterest_id int,foreign key(baseinterest_id) references baseinterest(id),
check(TotalPayable=PrincipalAmount+InterestAmount),check(PlanValidity>curdate()),check(Tenure<1000));


/*Create a view which displays the following details

PlanId, PlanName, LoanType, PrincipalAmount, Tenure, InterestRate, InterestAmount, TotalPayable, EMI, PlanValidity, PlanAddedOn, BaseInterestRate 

*/

create view loanplansview as select PlanId,PlanName,LoanType,PrincipalAmount,Tenure,InterestRate,InterestAmount,TotalPayable,EMI,PlanValidity,PlanAddedOn,BaseInterestRate from loanplans join baseinterest on baseinterest.id=loanplans.baseinterest_id;

/*Create a stored procedure which accepts the following parameters

PlanId, PlanName, LoanTypeId, PrincipalAmount, Tenure, InterestRate, InterestAmount, TotalPayable, EMI, PlanValidity, PlanAddedOn, BaseInterestRate

*/

create procedure insertloanplan(in PlanId int,in PlanName varchar(30),in LoanTypeId int,in PrincipalAmount int,in Tenure int,in InterestRate float,in InterestAmount int,in TotalPayable int,in EMI float,in PlanValidity date,in PlanAddedOn date,in BaseInterestRate float)

begin

insert into loanplans values(PlanId,PlanName,LoanTypeId,PrincipalAmount,Tenure,InterestRate,InterestAmount,TotalPayable,EMI,PlanValidity,PlanAddedOn,BaseInterestRate);

end;

/*Create a stored procedure which accepts the following parameters

PlanId, PlanName, LoanTypeId, PrincipalAmount, Tenure, InterestRate, InterestAmount, TotalPayable, EMI, PlanValidity, PlanAddedOn, BaseInterestRate

*/  

create procedure updateloanplan(in PlanId int,in PlanName varchar(30),in LoanTypeId int,in PrincipalAmount int,in Tenure int,in InterestRate float,in InterestAmount int,in TotalPayable int,in EMI float,in PlanValidity date,in PlanAddedOn date,in BaseInterestRate float)

begin

update loanplans set PlanName=PlanName,LoanTypeId=LoanTypeId,PrincipalAmount=PrincipalAmount,Tenure=Tenure,InterestRate=InterestRate,InterestAmount=InterestAmount,TotalPayable=TotalPayable,EMI=EMI,PlanValidity=PlanValidity,PlanAddedOn=PlanAddedOn,BaseInterestRate=BaseInterestRate where PlanId=PlanId;

end;

/*Create a stored procedure which accepts the following parameters

PlanId, PlanName, LoanTypeId, PrincipalAmount, Tenure, InterestRate, InterestAmount, TotalPayable, EMI, PlanValidity, PlanAddedOn, BaseInterestRate

*/

create procedure deleteloanplan(in PlanId int)

begin

delete from loanplans where PlanId=PlanId;

end;

/*Create a stored procedure which accepts the following parameters

PlanId, PlanName, LoanTypeId, PrincipalAmount, Tenure, InterestRate, InterestAmount, TotalPayable, EMI, PlanValidity, PlanAddedOn, BaseInterestRate

*/

create procedure getloanplan(in PlanId int)

begin

select * from loanplans where PlanId=PlanId;

end;

create table loanplans(PlanId int auto_increment primary key,PlanName varchar(30),
LoanTypeId int,PrincipalAmount int,Tenure int,InterestRate float,InterestAmount int,TotalPayable int,
EMI float,PlanValidity date,PlanAddedOn date,baseinterest_id int,foreign key(baseinterest_id) references baseinterest(id),
check(TotalPayable=PrincipalAmount+InterestAmount),check(PlanValidity>curdate()),check(Tenure<1000));


create table loanplanshistory(id int auto_increment primary key,updatedDate date,updateReason varchar(500),
LoanPlanId int,foreign key(loanplans_PlanId) references loanplans(PlanId));

create table BaseInterestRates(id int auto_increment primary key,LoanType varchar(25),
BaseInterestRate float);

---Seed the data into the BaseInterestRates table with interest rates for Home, Personal, Medical, Vehicle as 8.5, 10, 7.5, 8.0 respectively 

insert into baseinterest(LoanType,BaseInterestRate) values('Home',8.5),('Personal',10),('Medical',7.5),('Vehicle',8.0);

